spring:
  datasource:
    #url: jdbc:h2:mem:test_db;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE
    url: jdbc:mysql://${MYSQL_HOST:localhost}:3306/your_planner_db?useUnicode=true&useJDBCCompliantTimezoneShift=true&useLegacyDatetimeCode=false&serverTimezone=UTC
    username: yourplanneruser
    password: your_planner_password
  tomcat:
    max-wait: 20000
    max-active: 50
    max-idle: 20
    min-idle: 15
  jpa:
    hibernate:
      ddl-auto: create
    properties:
      hibernate:
        #dialect: org.hibernate.dialect.H2Dialect
        dialect: org.hibernate.dialect.MySQL8Dialect
        format_sql: true
        id:
          new_generator_mappings: false


server:
   port: 8080 # This is the default port anyway, but you can change it here

security:
  jwt:
    token:
      secret-key: secret-key
      expire-length: 300000 # 5 minutes duration by default: 5 minutes * 60 seconds * 1000 miliseconds
      
UserController:
  signin: Authenticates user and returns its JWT token.
  signup: Creates user and returns its JWT token
  delete: Deletes specific user by username
  search: Returns specific user by username
  me: Returns current user's data

TaskController:
  addTask: Allows authenticated user to add task if duration is 0 it means that it's not timelimited
  addTasks: Iteratively adds tasks
  getAllTasks: Returns tasks specified for principal
  getAllTasksByDate: Returns tasks specified for principal limited by date
  removeTask: Removes task by id
  removeTasks: Iteratively removes task by id
  modifyTask: Modify existing task but type is time limited or not is not possible to change
  runTask: Runs task counting down duration until it's stop
  stopTask: Calculates value of duration and set isRun to false, mark as done if duration is run out
  calculateAndGetDuration: Calculates duration and stop task if its finished
  toggleIsTaskDone: Sets task as done or not done